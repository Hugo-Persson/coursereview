// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Language {
  English
  Swedish
}

enum Cycle {
  G1
  G2
  A
}

enum Grading {
  TH
}

model Course {
  id                      Int              @id @default(autoincrement())
  nameSv                  String
  nameEn                  String
  descriptionSv           String
  descriptionEn           String
  coursePageSv            String
  coursePageEn            String
  evaluationSv            String
  evaluationEn            String
  courseCode              String
  credits                 Float
  language                Language
  reviews                 Review[]
  courseCoordinator       Teacher          @relation(references: [id], fields: [teacherId])
  Specialization          Specialization[]
  teacherId               Int
  cycle                   Cycle
  grading                 Grading
  suitableForeignStudents Boolean
}

model Specialization {
  id     Int      @id @default(autoincrement())
  nameSv String
  nameEn String
  Course Course[]

  Program   Program? @relation(fields: [programId], references: [id])
  programId Int?
}

model Program {
  id             Int              @id @default(autoincrement())
  name           String
  Specialization Specialization[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  Review    Review[]
}

model Review {
  id       Int    @id @default(autoincrement())
  rating   Int
  comment  String
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
}

model Teacher {
  id     Int      @id @default(autoincrement())
  name   String
  email  String   @unique
  Course Course[]
}
